// <auto-generated />
using System;
using McWebsite.Domain.GameServer.Enums;
using McWebsite.Domain.GameServerReport.Enums;
using McWebsite.Domain.InGameEvent.Enums;
using McWebsite.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace McWebsite.Infrastructure.Migrations
{
    [DbContext(typeof(McWebsiteDbContext))]
    partial class McWebsiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("McWebsite.Domain.Conversation.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Conversations", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.GameServer.GameServer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentPlayersNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaximumPlayersNumber")
                        .HasColumnType("int");

                    b.Property<ServerLocation>("ServerLocation")
                        .HasColumnType("int");

                    b.Property<ServerType>("ServerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameServers", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.GameServerReport.GameServerReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameServerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<ReportType>("ReportType")
                        .HasColumnType("int");

                    b.Property<Guid>("ReportingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameServerReports", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.GameServerSubscription.GameServerSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyingPlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameServerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameServerSubscriptions", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.InGameEventModel.Entities.InGameEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameServerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<EventType>("InGameEventType")
                        .HasColumnType("int");

                    b.Property<int>("InGameId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InGameEvents", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.InGameEventOrder.InGameEventOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoughtInGameEventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InGameEventOrders", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.MessageModel.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShipperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("McWebsite.Domain.Conversation.Conversation", b =>
                {
                    b.OwnsOne("McWebsite.Domain.Conversation.ValueObjects.ConversationParticipants", "Participants", b1 =>
                        {
                            b1.Property<Guid>("ConversationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("FirstParticipant")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("FirstParticipant");

                            b1.Property<Guid>("SecondParticipant")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("SecondParticipant");

                            b1.HasKey("ConversationId");

                            b1.ToTable("Conversations");

                            b1.WithOwner()
                                .HasForeignKey("ConversationId");
                        });

                    b.OwnsMany("McWebsite.Domain.MessageModel.ValueObjects.MessageId", "MessageIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ConversationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("MessageId");

                            b1.HasKey("Id");

                            b1.HasIndex("ConversationId");

                            b1.ToTable("ConversationMessageIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ConversationId");
                        });

                    b.Navigation("MessageIds");

                    b.Navigation("Participants")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
